"""
1395. 统计作战单位数
 n 名士兵站成一排。每个士兵都有一个 独一无二 的评分 rating 。

每 3 个士兵可以组成一个作战单位，分组规则如下：

从队伍中选出下标分别为 i、j、k 的 3 名士兵，他们的评分分别为 rating[i]、rating[j]、rating[k]
作战单位需满足： rating[i] < rating[j] < rating[k] 或者 rating[i] > rating[j] > rating[k] ，其中  0 <= i < j < k < n
请你返回按上述条件可以组建的作战单位数量。每个士兵都可以是多个作战单位的一部分。



示例 1：

输入：rating = [2,5,3,4,1]
输出：3
解释：我们可以组建三个作战单位 (2,3,4)、(5,4,1)、(5,3,1) 。
示例 2：

输入：rating = [2,1,3]
输出：0
解释：根据题目条件，我们无法组建作战单位。
示例 3：

输入：rating = [1,2,3,4]
输出：4

"""


class Solution2:
    def numTeams(self, rating) -> int:
        counter = 0
        n = len(rating)
        for index_i in range(n-2):
            for index_j in range(index_i, n -1):
                for index_k in range(index_j, n):
                    if (rating[index_k] > rating[index_j] > rating[index_i]) or (
                            rating[index_k] < rating[index_j] < rating[index_i]):
                        counter += 1
        return counter


class Solution:
    def numTeams(self, rating) -> int:
        counter = 0
        n = len(rating)
        for index_j in range(1, n-1):
            less_i = more_k = less_k = more_i = 0
            for index_i in range(index_j):
                if rating[index_i] < rating[index_j]:
                    less_i += 1
                elif rating[index_i] > rating[index_j]:
                    more_i += 1
            for index_k in range(index_j+1, n):
                if rating[index_j] < rating[index_k]:
                    less_k += 1
                elif rating[index_j] > rating[index_k]:
                    more_k += 1
            counter += less_i * less_k + more_i * more_k
        return counter


answer = Solution()
# print(answer.numTeams([2,5,3,4,1]))
print(answer.numTeams([2032,2688,1116,1016,1476,2117,2178,144,52,1811,1684,1866,895,2393,2632,508,653,2000,1393,369,1897,171,2492,2583,1319,2756,206,136,1922,1806,1952,462,379,2266,1453,20,172,1242,2545,853,1536,1958,491,313,1265,1104,1888,673,1953,1820,1313,2293,1174,767,929,611,665,2626,393,2052,1149,1362,2051,21,1959,189,199,1558,1382,583,2466,1096,105,1515,2001,2549,308,2329,1048,2563,2372,1152,2976,234,1859,2581,196,2555,1280,557,2067,1068,1962,2433,1401,1559,972,1595,2744,1225,978,758,181,1840,2547,2403,154,2711,1475,2014,648,2081,1785,2044,166,2249,1413,1144,1070,734,2239,484,2785,2907,96,1561,2156,1972,2321,801,692,1711,1577,1933,2497,161,582,1271,1974,149,1852,724,1854,2130,754,82,1833,1813,1300,322,1674,1798,440,348,2576,2388,2591,1816,2356,1202,2243,1301,1628,741,900,1752,2020,1119,1479,721,745,186,2007,2676,2822,1112,182,2337,122,2502,2515,2734,409,2074,2931,573,2245,2700,1658,2641,94,2216,2513,908,1555,952,1266,784,2928,2102,1893,2048,1901,1272,956,2065,472,2609,2755,768,1697,1195,2899,213,2789,2952,2327,1344,310,2118,1830,2224,2749,148,2690,2777,324,2322,2248,187,1165,2175,1170,1290,1364,2593,1942,2256,2562,395,256,2079,752,2120,2923,804,865,934,933,211,2797,882,1920,1219,1827,468,401,1498,1934,2837,2111,1929,538,1793,1191,574,2105,2585,391,2396,744,2119,597,2373,389,626,2426,1932,1387,1837,2505,2802,2235,2171,2680,1823,896,2036,2401,1976,964,1478,367,682,2906,319,2174,1169,425,1180,264,380,2557,2574,2895,999,1508,377,1567,1543,1748,1587,780,1380,1916,2452,2269,1051,1114,1551,2965,1946,240,157,46,805,47,104,1713,2561,504,997,35,1669,1867,1909,1998,2559,910,2908,1636,194,1131,359,2195,870,994,2622,572,2422,1007,374,2753,2969,293,423,1297,50,1315,1512,1106,1239,1375,2650,39,849,1652,603,2041,108,1863,696,2182,479,788,2148,2988,1746,443,2544,515,333,478,1255,781,1292,634,959,1947,1677,1872,197,242,2693,2885,1629,1173,314,1200,1572,2548,2187,1679,2495,686,2501,1815,2432,505,707,1237,476,1539,958,195,2880,2397,1098,365,1032,2614,1374,1573,2139,248,2717,2191,1493,1227,2246,89,1483,1759,110,2459,2077,1631,969,598,791,2228,1005,2436,1410,2872,2250,1258,415,1826,1026,580,1504,474,1420,2512,1033,1666,1217,419,1989,2096,620,2302,579,2030,2721,1755,810,2172,119,2556,1358,1419,1141,795,1349,1895,265,2770,325,2348,1715,383,2094,1023,1610,1871,2638,1388,2375,2635,1522,1495,2183,1055,685,2517,1843,1370,1162,2856,566,2026,2778,1285,150,1960,433,2113,2073,1240,747,2602,1688,986,2071,2425,539,529,1900,2309,796,798,2941,699,251,2643,1259,1537,233,2350,27,1606,2703,2229,773,901,434,1566,1136,175,13,659,1052,2826,1654,2809,602,737,1604,2633,1730,555,133,1491,1727,2451,543,435,2529,1318,2305,30,1359,575,1949,2787,60,1120,2820,1562,2606,1335,2085,2710,2893,2283,936,1594,2323,2022,1528,117,1767,2312,2324,29,1857,1448,1753,1721,1836,678,2799,2605,998,1496,74,2407,1651,1719,2850,92,2271,2121,403,1637,2919,2740,1706,1801,1747,1967,1057,2185,1693,127,2739,2253,302,1894,1422,2668,294,863,2219,2902,1570,2075,155,2509,1926,31,390,2109,1462,262,2435,1130,245,37,2301,1295,2803,893,159,1464,2378,1887,1518,1441,1160,503,2854,1814,1579,970,835,2454,318,664,782]))